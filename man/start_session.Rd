% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sessionInitialization.R
\name{start_session}
\alias{start_session}
\title{Start a new session}
\usage{
start_session(..., remDr = NULL)
}
\arguments{
\item{...}{
  Arguments passed on to \code{\link[RSelenium:rsDriver]{RSelenium::rsDriver}}
  \describe{
    \item{\code{port}}{Port to run on}
    \item{\code{browser}}{Which browser to start}
    \item{\code{version}}{what version of Selenium Server to run. Default = "latest"
which runs the most recent version. To see other version currently
sourced run binman::list_versions("seleniumserver")}
    \item{\code{chromever}}{what version of Chrome driver to run. Default = "latest"
which runs the most recent version. To see other version currently
sourced run binman::list_versions("chromedriver"), A value of NULL
excludes adding the chrome browser to Selenium Server.}
    \item{\code{geckover}}{what version of Gecko driver to run. Default = "latest"
which runs the most recent version. To see other version currently
sourced run binman::list_versions("geckodriver"), A value of NULL
excludes adding the firefox browser to Selenium Server.}
    \item{\code{iedrver}}{what version of IEDriverServer to run. Default = "latest"
which runs the most recent version. To see other version currently
sourced run binman::list_versions("iedriverserver"), A value of NULL
excludes adding the internet explorer browser to Selenium Server.
NOTE this functionality is Windows OS only.}
    \item{\code{phantomver}}{what version of PhantomJS to run. Default = "2.1.1"
which runs the most recent stable version. To see other version currently
sourced run binman::list_versions("phantomjs"), A value of NULL
excludes adding the PhantomJS headless browser to Selenium Server.}
    \item{\code{verbose}}{If TRUE, include status messages (if any)}
    \item{\code{check}}{If TRUE check the versions of selenium available and the
versions of associated drivers (chromever, geckover, phantomver,
iedrver). If new versions are available they will be downloaded.}
  }}
}
\description{
Start a new selenium server and browser session
}
\details{
The function creates a remote driver via Selenium server function
\code{\link[RSelenium:rsDriver]{RSelenium::rsDriver()}}.
Note that Selenium server shall be already running.
Look up \href{https://docs.ropensci.org/RSelenium/articles/basics.html#docker}{here}
on how to set up a new Selenium server.
}
\examples{
## Not run:
library(scrapeInstagram)

start_session()

--------------------------------------------------
# You may specify Selenium server arguments; e.g., browser and port number
start_session(browser = c('firefox'), port = 4444L)

--------------------------------------------------
# Alternatively, you may define the driver separately and use the function start_session() just to open the browser
remDr <- remoteDriver(
  remoteServerAddr = "localhost",
  port = 4444L,
   browserName = "firefox"
)
start_session(remDr = remDr)

## End(Not run)
}
